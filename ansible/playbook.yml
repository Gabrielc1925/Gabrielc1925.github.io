--- - name: Install Docker, Nginx, and Git hosts: all become: true tasks: - name: Update apt cache apt: update_cache: yes - name: Install Docker dependencies apt: name: - ca-certificates - curl state: present - name: Create directory for Docker keyring file: path: /etc/apt/keyrings state: directory mode: "0755" - name: Download Docker GPG key get_url: url: https://download.docker.com/linux/ubuntu/gpg dest: /etc/apt/keyrings/docker.asc - name: Set permissions for Docker GPG key file: path: /etc/apt/keyrings/docker.asc mode: "0644" - name: Add Docker repository block: - name: Get architecture command: dpkg --print-architecture register: architecture - name: Get OS codename shell: . /etc/os-release && echo "$VERSION_CODENAME" register: os_codename - name: Add Docker repository to apt sources copy: content: | deb [arch= signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu stable dest: /etc/apt/sources.list.d/docker.list - name: Update apt cache after adding Docker repo apt: update_cache: true - name: Install Docker, Nginx, and Git apt: name: - git-all - nginx - docker-ce - docker-ce-cli - containerd.io - docker-buildx-plugin - docker-compose-plugin state: present - name: configure files to be served hosts: all become: true tasks: - name: get github pages files git: repo: "https://github.com/Gabrielc1925/Gabrielc1925.github.io.git" dest: "/Gabrielc1925.github.io" version: main - name: Copy nginx conf.d directory copy: src: "/Gabrielc1925.github.io/nginx_setup/conf.d" dest: /etc/nginx/conf.d remote_src: true - name: Copy nginx configuration file copy: content: "/Gabrielc1925.github.io/Gabrielc1925.github.io/nginx_setup/nginx.conf" dest: /etc/nginx/nginx.conf - name: Clone html files from github repo to temporary folder git: repo: "https://github.com/Gabrielc1925/Gabrielc1925.github.io.git" dest: "/gh-pages" version: gh-pages update: yes - name: synchronize html files from gh-pages to var so it can be served by nginx copy: src: "/gh-pages" dest: /var/www/gabrielc1925.github.io remote_src: true - name: Check nginx configuration syntax command: nginx -t register: nginx_test ignore_errors: true - name: Display nginx syntax check output if it failed debug: var: nginx_test.stderr_lines when: nginx_test.rc != 0 - name: Fail the playbook if nginx config is invalid fail: msg: "Nginx configuration is invalid. Please fix the errors and try again." when: nginx_test.rc != 0 - name: Restart nginx and enable on boot service: name: nginx enabled: true state: restarted